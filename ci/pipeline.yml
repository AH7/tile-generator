---

groups:

- name: all
  jobs:
  - build-docker
  - unit-tests
  - build-tile
  - acceptance-tests
  - claim-pcf
  - deploy-tile
  - deployment-tests
  - remove-tile
  - release-pcf
  - publish-docs

- name: build
  jobs:
  - build-docker
  - unit-tests
  - build-tile
  - acceptance-tests
  - publish-docs

- name: deploy
  jobs:
  - claim-pcf
  - deploy-tile
  - deployment-tests
  - remove-tile
  - release-pcf

- name: manual
  jobs:
  - claim-pcf
  - manual-cleanup-and-release

resources:

- name: sample-tile-repo
  type: git
  source:
    paths: [ "sample" ]
    branch: master
    uri: http://github.com/cf-platform-eng/tile-generator.git

- name: tile-generator-repo
  type: git
  source:
    ignore_paths: [ "sample", "mkdocs.yml", "docs" ]
    branch: master
    uri: http://github.com/cf-platform-eng/tile-generator.git

- name: documentation-repo
  type: git
  source:
    paths: [ "mkdocs.yml", "docs" ]
    branch: master
    uri: http://github.com/cf-platform-eng/tile-generator.git

- name: github-pages
  type: git
  source:
    branch: gh-pages
    uri: git@github.com:cf-platform-eng/tile-generator.git
    private_key: {{github-pages-private-key}}

- name: dockerfile-repo
  type: git
  source:
    paths: [ "ci/Dockerfile", "ci/requirements.txt" ]
    branch: master
    uri: http://github.com/cf-platform-eng/tile-generator.git

- name: generated-tile
  type: s3
  source:
    bucket: {{s3-bucket}}
    regexp: .*-(?P<version>.*)\.pivotal
    access_key_id: {{s3-access-key}}
    secret_access_key: {{s3-secret}}

- name: tile-history
  type: s3
  source:
    bucket: {{s3-bucket}}
    regexp: tile\-history-(?P<version>.*)\.yml
    access_key_id: {{s3-access-key}}
    secret_access_key: {{s3-secret}}

- name: ci-docker-image
  type: docker-image
  source:
    repository: guidowb/tile-pipeline
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: app-docker-image
  type: docker-image
  source:
    repository: guidowb/sample-cf-app
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: pcf-environment
  type: pool
  source:
    uri: git@github.com:cf-platform-eng/pipeline-resource-pool
    branch: master
    pool: pcf
    private_key: {{github-pool-private-key}}

jobs:

- name: build-docker
  plan:
  - get: dockerfile-repo
    trigger: true
  - put: ci-docker-image
    params:
      build: dockerfile-repo/ci

- name: unit-tests
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ build-docker ]
      trigger: true
    - get: tile-generator-repo
      trigger: true
  - task: run-unit-tests
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      run:
        path: tile-generator-repo/ci/scripts/run-unittests.sh
        args: [ "tile-generator-repo/lib" ]

- name: publish-docs
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ build-docker ]
      trigger: true
    - get: documentation-repo
      trigger: true
    - get: github-pages
  - task: update-docs
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: documentation-repo
      - name: github-pages
      outputs:
      - name: generated-repo
      run:
        path: sh
        args:
        - -exc
        - |
          (cd documentation-repo; mkdocs build --clean)
          cp -R github-pages/.git generated-repo
          cp -R documentation-repo/site/* generated-repo
          cd generated-repo
          git config user.name "CI Pipeline"
          git config user.email "ci-pipeline@localhost"
          git commit -a -m "Pipeline published updated docs"
  - put: github-pages
    params:
      repository: generated-repo

- name: build-tile
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ unit-tests ]
      trigger: true
    - get: tile-generator-repo
      passed: [ unit-tests ]
      trigger: true
    - get: sample-tile-repo
      trigger: true
    - get: tile-history
      trigger: false
  - task: build-sample-apps
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: sample-tile-repo
      outputs:
      - name: sample-tile-build
      run:
        path: sample-tile-repo/sample/src/build.sh
        args: [ "sample-tile-build" ]
  - put: app-docker-image
    params:
      build: sample-tile-build/src
  - task: populate-docker-cache
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: app-docker-image
      outputs:
      - name: docker-cache
      run:
        path: sh
        args: [ "-c", 'cp app-docker-image/image docker-cache/guidowb-sample-cf-app.tgz']
  - task: build-sample-tile
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: sample-tile-build
      - name: tile-history
      - name: docker-cache
      outputs:
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/tile-build.sh
        args: [ "sample-tile-build", "tile-history", "generated-tile", "docker-cache" ]
  - put: tile-history
    params:
      from: generated-tile/tile-history-.*\.yml
  - put: generated-tile
    params:
      from: generated-tile/.*\.pivotal

- name: acceptance-tests
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ build-tile ]
      trigger: true
    - get: tile-generator-repo
      passed: [ build-tile ]
      trigger: true
    - get: generated-tile
      passed: [ build-tile ]
      trigger: true
  - task: run-acceptance-tests
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/run-acceptancetests.sh
        args: [ "generated-tile" ]

- name: claim-pcf
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ acceptance-tests ]
      trigger: true
    - get: tile-generator-repo
      passed: [ acceptance-tests ]
      trigger: true
    - get: generated-tile
      passed: [ acceptance-tests ]
      trigger: true
    - put: pcf-environment
      params:
        acquire: true

- name: deploy-tile
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ claim-pcf ]
      trigger: true
    - get: tile-generator-repo
      passed: [ claim-pcf ]
      trigger: true
    - get: generated-tile
      passed: [ claim-pcf ]
      trigger: true
    - get: pcf-environment
      passed: [ claim-pcf ]
  - task: run-deploy-tile
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: pcf-environment
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/run-deploytile.sh
        args: [ "generated-tile", "pcf-environment" ]

- name: deployment-tests
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ deploy-tile ]
      trigger: true
    - get: tile-generator-repo
      passed: [ deploy-tile ]
      trigger: true
    - get: generated-tile
      passed: [ deploy-tile ]
      trigger: true
    - get: pcf-environment
      passed: [ deploy-tile ]
  - task: run-deployment-tests
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: pcf-environment
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/run-deploymenttests.sh
        args: [ "generated-tile", "pcf-environment" ]

- name: remove-tile
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ deployment-tests ]
      trigger: true
    - get: tile-generator-repo
      passed: [ deployment-tests ]
      trigger: true
    - get: generated-tile
      passed: [ deployment-tests ]
      trigger: true
    - get: pcf-environment
      passed: [ deployment-tests ]
  - task: remove-tile
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: pcf-environment
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/run-removetile.sh
        args: [ "generated-tile", "pcf-environment" ]

- name: release-pcf
  plan:
  - get: pcf-environment
    passed: [ remove-tile ]
    trigger: true
  - put: pcf-environment
    params:
      release: pcf-environment

- name: manual-cleanup-and-release
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ claim-pcf ]
    - get: tile-generator-repo
      passed: [ claim-pcf ]
    - get: generated-tile
      passed: [ claim-pcf ]
    - get: pcf-environment
      passed: [ claim-pcf ]
  - task: remove-tile
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: pcf-environment
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/run-removetile.sh
        args: [ "generated-tile", "pcf-environment" ]
  - put: pcf-environment
    params:
      release: pcf-environment


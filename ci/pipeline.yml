---

groups:

- name: build
  jobs:
  - build-docker
  - unit-tests
  - build-tile
  - acceptance-tests

- name: deploy
  jobs:
  - claim-pcf
  - deployment-tests
  - release-pcf

resources:

- name: sample-tile-repo
  type: git
  source:
    paths: [ "sample" ]
    branch: master
    uri: http://github.com/cf-platform-eng/tile-generator.git

- name: tile-generator-repo
  type: git
  source:
    ignore_paths: [ "sample" ]
    branch: acceptance
    uri: http://github.com/cf-platform-eng/tile-generator.git

- name: dockerfile-repo
  type: git
  source:
    paths: [ "ci/Dockerfile", "ci/requirements.txt" ]
    branch: master
    uri: http://github.com/cf-platform-eng/tile-generator.git

- name: generated-tile
  type: s3
  source:
    bucket: {{s3-bucket}}
    regexp: .*-(?P<version>.*)\.pivotal
    access_key_id: {{s3-access-key}}
    secret_access_key: {{s3-secret}}

- name: tile-history
  type: s3
  source:
    bucket: {{s3-bucket}}
    regexp: tile\-history-(?P<version>.*)\.yml
    access_key_id: {{s3-access-key}}
    secret_access_key: {{s3-secret}}

- name: pcf-backup
  type: s3
  source:
    bucket: {{s3-bucket}}
    regexp: pcf-backup-.*-(?P<version>.*)\.yml
    access_key_id: {{s3-access-key}}
    secret_access_key: {{s3-secret}}

- name: ci-docker-image
  type: docker-image
  source:
    repository: guidowb/tile-pipeline
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: pcf-environment
  type: pool
  source:
    uri: git@github.com:cf-platform-eng/pipeline-resource-pool
    branch: master
    pool: pcf
    private_key: {{github-pool-private-key}}

jobs:

- name: build-docker
  plan:
  - get: dockerfile-repo
    trigger: true
  - put: ci-docker-image
    params:
      build: dockerfile-repo/ci

- name: unit-tests
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ build-docker ]
      trigger: true
    - get: tile-generator-repo
      trigger: true
  - task: run-unit-tests
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      run:
        path: tile-generator-repo/ci/scripts/run-unittests.sh
        args: [ "tile-generator-repo/lib" ]

- name: build-tile
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ unit-tests ]
      trigger: true
    - get: tile-generator-repo
      passed: [ unit-tests ]
      trigger: true
    - get: sample-tile-repo
      trigger: true
    - get: tile-history
      trigger: false
  - task: build-sample-tile
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: sample-tile-repo
      - name: tile-history
      outputs:
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/tile-build.sh
        args: [ "sample-tile-repo/sample", "tile-history", "generated-tile" ]
  - put: tile-history
    params:
      from: generated-tile/tile-history-.*\.yml
  - put: generated-tile
    params:
      from: generated-tile/.*\.pivotal

- name: acceptance-tests
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ build-tile ]
      trigger: true
    - get: tile-generator-repo
      passed: [ build-tile ]
      trigger: true
    - get: generated-tile
      passed: [ build-tile ]
      trigger: true
  - task: run-acceptance-tests
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/run-acceptancetests.sh
        args: [ "generated-tile" ]

- name: deployment-tests
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ claim-pcf ]
      trigger: true
    - get: tile-generator-repo
      passed: [ claim-pcf ]
      trigger: true
    - get: generated-tile
      passed: [ claim-pcf ]
      trigger: true
    - get: pcf-environment
      passed: [ claim-pcf ]
  - task: run-deployment-tests
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: pcf-environment
      - name: generated-tile
      run:
        path: tile-generator-repo/ci/scripts/run-deploymenttests.sh
        args: [ "generated-tile", "pcf-environment" ]

- name: claim-pcf
  plan:
  - aggregate:
    - get: ci-docker-image
      passed: [ acceptance-tests ]
      trigger: true
    - get: tile-generator-repo
      passed: [ acceptance-tests ]
      trigger: true
    - get: generated-tile
      passed: [ acceptance-tests ]
      trigger: true
    - put: pcf-environment
      params:
        acquire: true
  - task: backup-settings
    config:
      platform: linux
      image: "docker:///guidowb/tile-pipeline"
      inputs:
      - name: tile-generator-repo
      - name: pcf-environment
      outputs:
      - name: pcf-backup
      run:
        path: tile-generator-repo/ci/scripts/pcf-backup.sh
        args: [ "pcf-environment", "pcf-backup" ]
  - put: pcf-backup
    params:
      from: pcf-backup/.*\.yml

- name: release-pcf
  plan:
  - get: generated-tile
    passed: [ deployment-tests ]
    trigger: true
  - get: pcf-environment
    passed: [ deployment-tests ]
    trigger: true
  - put: pcf-environment
    params:
      release: pcf-environment

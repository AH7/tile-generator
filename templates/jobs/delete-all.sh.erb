#!/bin/bash

set -e

function cf() {
	CF=`which cf`
	if [ "$1" == "--output" ]; then
		shift
		echo cf "$@"
		$CF "$@"
		result=$?
	else
		echo cf "$@"
		output=`$CF "$@" 2>&1`
		result=$?
		if [ "$result" -ne "0" ]; then
			echo "$output"
		fi
	fi
	return $result
}

function import_opsmgr_variables() {
	export SCHEME=https
	export ADMIN_USER=<%= properties.cf.admin_user %>
	export ADMIN_PASSWORD=<%= properties.cf.admin_password %>
	export DOMAIN=<%= properties.domain %>
	export APP_DOMAIN=<%= properties.app_domains[0] %>
	export CF_ORG=<%= properties.org %>
	export CF_ORG_QUOTA=<%= properties.org_quota %>
	export CF_SPACE=<%= properties.space %>
	export CF_TARGET=$SCHEME://api.${DOMAIN}
	export CF_SKIP_SSL=<%= properties.ssl.skip_cert_verify %>
}

function prepare_cf_cli {
	export PATH="/var/vcap/packages/cf_cli/bin:$PATH"
	export CF_HOME=`pwd`/home/cf
	mkdir -p $CF_HOME
}

function authenticate() {
	cf --output --version
	if [ "$CF_SKIP_SSL" == "true" -o "$CF_SKIP_SSL" == "True" ]; then
		cf api $CF_TARGET --skip-ssl-validation
	else
		cf api $CF_TARGET
	fi
	cf auth $ADMIN_USER $ADMIN_PASSWORD
}

function target_org() {
	if [ -z "$CF_ORG" ]; then
		CF_ORG={{ context.name }}-org
	fi
	ignore=`cf target -o $CF_ORG`
	return $?
}

function target_space() {
	if [ -z "$CF_SPACE" ]; then
		CF_SPACE={{ context.name }}-space
	fi
	ignore=`cf target -s $CF_SPACE`
	return $?
}

function delete_empty_space() {
	output=`cf --output apps | tail -1`
	if [ "$output" == "No apps found" ]; then
		cf delete-space -f $CF_SPACE
	fi
}

function delete_empty_org() {
	output=`cf --output spaces | tail -1`
	if [ "$output" == "No spaces found" ]; then
		cf delete-org -f $CF_ORG
	fi
}

function delete_all_versions() {
	cf --output apps | grep "$1-" | while read app rest; do
		cf delete -f $app
	done
}

import_opsmgr_variables
prepare_cf_cli
authenticate
if target_org; then
	if target_space; then

		{% for package in context.packages | reverse %}
		# Delete package {{ package.name }}
		#
		{% if package.is_app %}
		delete_all_versions {{ package.name }}
		{% elif package.is_buildpack %}
		{% endif %}
		{% if package.is_broker %}
		{% if package.has_dynamic_plans %}
		{% endif %}
		{% endif %}

		{% endfor %}
		delete_empty_space
	fi
	delete_empty_org
fi

---
name: {{ name }}
label: {{ label }}
description: {{ description }}
icon_image: {{ base64(icon_file) }}
product_version: {{ version }}
metadata_version: '1.5'
rank: 1
serial: true

releases:
- file: {{ release.file }}
  name: {{ release.name }}
  version: {{ release.version }}

stemcell_criteria:
  os: {{ stemcell_criteria.os or 'ubuntu-trusty' }}
  requires_cpi: false
  version: {{ stemcell_criteria.version }}

property_blueprints:
{% for property in properties %}
- name: {{ property.name }} # Refer to this elsewhere as (( .property.{{ property.name }} ))
  type: {{ property.type }}
  {% if property.default is defined %}
  default: {{ property.default }}
  {% endif %}
{% endfor %}
{% for form in forms %} {% for property in form.properties %}
- name: {{ property.name }} # Refer to this elsewhere as (( .property.{{ property.name }} ))
  type: {{ property.type }}
  {% if property.default is defined %}
  default: {{ property.default }}
  {% endif %}
  configurable: true
{% endfor %} {% endfor %}

{% for form in forms %}
form_types:
- name: {{ form.name }}
  label: {{ form.label }}
  description: {{ form.description }}
  property_inputs:
  {% for property in form.properties %}
  - reference: .properties.{{ property.name }}
  	label: {{ property.label }}
  	description: {{ property.description }}
  {% endfor %}
{% endfor %}

job_types:
- name: compilation
  resource_label: compilation
  resource_definitions:
   - name: ram
     type: integer
     configurable: true
     default: 1024
   - name: ephemeral_disk
     type: integer
     configurable: true
     default: 1024
   - name: persistent_disk
     type: integer
     configurable: true
     default: 0
   - name: cpu
     type: integer
     configurable: true
     default: 2
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definitions:
    - name: instances
      type: integer
      default: 1
{% for job in jobs %}
- name: {{ job.name }}
  resource_label: {{ job.name }}
  errand: true
  templates:
  - name: {{ job.name }}
    release: {{ release.name }}
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2048
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definitions:
  - name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap
  - name: app_credentials
    type: salted_credentials
  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
      - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    uaa:
      url: https://uaa.(( ..cf.cloud_controller.system_domain.value ))
      clients:
        generic_broker:
          secret: test
    generic_broker:
      app_name: (( .properties.app_name.value ))
      app_version: (( .properties.app_version.value ))
      app_uri: (( .properties.app_uri.value ))
      create_open_security_group: (( .properties.create_open_security_group.value ))
      app_push:
        org_quota: (( .properties.org_quota.value ))
        timeout: 180
        memory: (( .properties.memory.value ))
      user: (( .{{ job.name }}.app_credentials.identity ))
      password: (( .{{ job.name }}.app_credentials.password ))
      start_command: (( .{{ job.name }}.start_command.value ))
      health_monitor: (( .{{ job.name }}.health_monitor.value ))
      # Need to squelch Broker user & password if app is also a broker..
      ### CUSTOM_VARIABLE_MANIFEST_BEGIN_MARKER
      ### CUSTOM_VARIABLE_MANIFEST_END_MARKER

      ### ON_DEMAND_PLAN_BEGIN_MARKER
      on_demand_service_plans: (( .properties.on_demand_service_plans_collection.value ))
      ### ON_DEMAND_PLAN_END_MARKER

      persistence_store_type: (( .properties.persistence_store_type.value ))
      ### PERSISTENCE_STORE_BEGIN_MARKER
      persistence_store:
        service_addr: (( .properties.persistence_service_addr.value ))
        service_sid: (( .properties.persistence_service_sid.value ))
        service_params: (( .properties.persistence_service_params.value ))
        persistence_broker_user: (( .properties.persistence_sb_user.value ))
        persistence_broker_password: (( .properties.persistence_sb_password.value ))
      ### PERSISTENCE_STORE_END_MARKER

      encryption_key: (( .properties.encryption_key.value ))
      cf:
        admin_user: (( ..cf.uaa.system_services_credentials.identity ))
        admin_password: (( ..cf.uaa.system_services_credentials.password ))

{% endfor %}

post_deploy_errands:
{% for errand in post_deploy_errands %}
- name: {{ errand.name }}
{% endfor %}

pre_delete_errands:
{% for errand in pre_delete_errands %}
- name: {{ errand.name }}
{% endfor %}

update:
  canaries: 1
  canary_watch_time: 60000-240000
  max_in_flight: 1
  update_watch_time: 60000-240000

requires_product_versions:
- name: cf
  version: "~> 1.0"
provides_product_versions:

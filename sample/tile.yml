---
name: test-tile
label: Generated Test Tile
description: A sample tile generated by tile-generator
icon_file: resources/icon.png

properties:
- name: author
  type: string
  label: Author
  value: Tile Ninja

forms:
- name: custom-form1
  label: Test Tile
  description: Custom Properties for Test Tile
  properties:
  - name: customer_name
    type: string
    label: Full Name
  - name: street_address
    type: string
    label: Street Address
    description: Address to use for junk mail
  - name: city
    type: string
    label: City
  - name: zip_code
    type: string
    label: ZIP+4
    default: '90310'
  - name: country
    type: dropdown_select
    label: Country
    options:
    - name: country_us
      label: US
      default: true
    - name: country_elsewhere
      label: Elsewhere

packages:
- name: app1
  type: app
  uri: app1                          # Provide only host/route name, app domain would be automatically added to host during deploy
  start_command: start_here.sh       # Custom start command
  create_open_security_group: true
  # Following three entries (org, space, bind_to_service) need to be defined together
  # in order to look a pre-existing service in a specified target org/space
  org: dev-org
  space: dev-space
  # Provide names of pre-provisioned service  (comma separated)
  bind_to_service: "mysql-service,TestService"
  # org_quota only applicable if a new org is being created fresh
  org_quota: 1024
  memory: 500
  files:
  - path: resources/app1.jar
- name: app2
  type: app
  health_monitor: false              # Turn off health monitoring, default: true
  files:
  - path: resources/app2.jar
  persistence_store: true            # Users will be allowed to select between MySQL, Mongo or none
- name: broker1
  type: app-broker
  need_cf_creds: true                # Allow CF Admin credentials as App env variables (CF_ADMIN_USER/CF_ADMIN_PASSWORD)
  files:
  - path: resources/broker1.jar
- name: broker2
  type: app-broker
  files:
  - path: resources/broker2.jar
  on_demand_service_plans:
  # name and guid fields are supplied by default
  # add additional fields here:
  - name: description
    type: string
    descrp: "Some Description"
    configurable: true
  - name: key1
    type: integer
    descrp: "Key 1 of type integer"
    configurable: true
  - name: key2
    type: string
    descrp: "Key 2 of type string"
    configurable: true
- name: broker3
  type: external-broker
  uri: http://broker3.example.com
  username: user
  password: secret
  internal_service_names: 'service1,service2'
- name: buildpack1
  type: buildpack
  files:
  - path: resources/buildpack1.zip
- name: buildpack2
  type: buildpack
  files:
  - path: resources/buildpack2.zip
- name: docker-bosh1
  type: docker-bosh
  image_name: ubuntu # Needs to match `image` specified in manifest
  files:
  - path: resources/ubuntu_image.tgz
  cpu: 5
  memory: 4096
  ephemeral_disk: 4096
  persistent_disk: 2048
  instances: 1
  manifest: |
    containers:
    - name: test-ubuntu-docker
      image: ubuntu # should match the docker image name
      command: "--dir /var/lib/test --appendonly yes"
      bind_ports:
      - "9200:9200"
      bind_volumes:
      - "/var/lib/test"
      env-vars:
      - test-key1: testValue1
      - test-key2: testValue2
      # Must add custom properties below
      - custom-variable-name: (( .properties.customer_name.value ))
      - custom-variable-city: (( .properties.city.value ))
- name: docker-app
  type: docker-app
  image: test/dockerimage
  uri: docker-app1.example.com
  start_command: start_here.sh
  health_monitor: true
  create_open_security_group: true
  org_quota: 2000
  memory: 1500
- name: docker-app-broker
  type: docker-app-broker
  image: test/dockerimage            # Docker image on public docker registry
  uri: docker-app2                   # Provide only host/route name, app domain would be automatically added to host during deploy
  start_command: start_here.sh
  health_monitor: true
  create_open_security_group: true
  org_quota: 2000
  memory: 1500
- name: blob1
  type: blob
  files:
  - path: resources/blob1.zip

